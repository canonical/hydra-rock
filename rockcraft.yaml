name: hydra
base: bare
build-base: ubuntu@22.04
version: "2.2.0"
summary: Ory Hydra
description: |
  Ory Hydra is a hardened and certified OAuth 2.0 and OpenID Connect provider.
license: Apache-2.0
run-user: _daemon_
platforms:
  amd64:

services:
  hydra:
    override: replace
    command: hydra serve all
    startup: enabled

parts:
  certificates:
    plugin: nil
    stage-packages:
      - ca-certificates

  hydra:
    plugin: go
    build-snaps:
      - go/1.21/stable
    override-build: |
      src_config_path="github.com/ory/hydra/v2/driver"
      build_ver="${src_config_path}/config.Version"
      build_hash="${src_config_path}/config.Commit"
      build_date="${src_config_path}/config.Date"
      go_linker_flags="-w \
                       -s \
                       -X ${build_ver}=$(git -C "${CRAFT_PART_SRC}" describe --tags) \
                       -X ${build_hash}=$(git -C "${CRAFT_PART_SRC}" rev-parse HEAD) \
                       -X ${build_date}=$(date -u +%Y-%m-%dT%H:%M:%SZ)"

      # Addressing CVE
      # TODO(@shipperizer) thing about using a git patch for the go.mod
      go mod edit -replace github.com/jackc/pgproto3/v2=github.com/jackc/pgproto3/v2@v2.3.3
      go mod edit -replace github.com/jackc/pgx/v4=github.com/jackc/pgx/v4@v4.18.2
      go mod edit -replace golang.org/x/crypto=golang.org/x/crypto@v0.35.0
      go mod edit -replace  golang.org/x/net/html=golang.org/x/net/html@v0.33.0
      go mod edit -replace github.com/golang-jwt/jwt/v4=github.com/golang-jwt/jwt/v4@v4.5.2
      go mod edit -replace  github.com/golang-jwt/jwt/v5=github.com/golang-jwt/jwt/v5@v5.2.2
      go mod edit -replace github.com/jackc/pgconn=github.com/jackc/pgconn@v1.14.3

      export CGO_ENABLED=0
      go mod download all
      go build -ldflags="${go_linker_flags}" -o "${CRAFT_PART_INSTALL}"/bin/hydra
    source: https://github.com/ory/hydra
    source-type: git
    source-tag: v2.2.0

  deb-security-manifest:
    plugin: nil
    after:
      - certificates
    override-prime: |
      set -x
      mkdir -p $CRAFT_PRIME/usr/share/rocks/
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && dpkg-query --admindir=$CRAFT_PRIME/var/lib/dpkg/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) > $CRAFT_PRIME/usr/share/rocks/dpkg.query
